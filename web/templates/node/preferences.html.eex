<a class="after-link" onclick="snapshot_dialog.open()">Set viewing date: <b><%= Timex.format!(@node.calculation_opts.datetime, "{M}/{D}/{YYYY}") %></b></a>
<br/>
<a class="after-link" onclick="preferences_dialog.open()">Change preferences</a>

<paper-dialog id="snapshot_dialog" class="paper-date-picker-dialog" modal on-iron-overlay-closed="dismissDialog">
	<paper-date-picker id="snapshot_date" name="datetime" date=<%= Timex.format!(@node.calculation_opts.datetime, "{ISOdate}") %> max-date="<%= Timex.now |> Timex.format!("{ISOdate}") %>"></paper-date-picker>
	<div class="buttons">
		<paper-button dialog-dismiss>Cancel</paper-button>
		<paper-button dialog-confirm raised class="primary" onclick="document.location = '?datetime=' + snapshot_date.date.toISOString().substring(0, 10)">Set viewing date</paper-button>
	</div>
</paper-dialog>

<paper-dialog id="preferences_dialog" modal on-iron-overlay-closed="dismissDialog" style="width: 600px;">
	<h2>Fine tune how results are calculated</h2>

	<form id="preferences_form" method="POST" action="/identities/me/preferences" class="pure-form">
		<input type="hidden" name="_csrf_token" value="<%= get_csrf_token() %>" />

		<div class="range" style="margin-bottom: 20px;">
			<input type="range" name="minimum_voting_power" id="minimum_voting_power_range" value="<%= @node.calculation_opts.minimum_turnout || 0 %>" min="0" max="1" step="any" oninput="minimum_voting_power_value.value = 'Expecting at least ' + Math.round(100 * minimum_voting_power_range.value) + '% turnout.'" style="margin: 0 auto;" />
			<output id="minimum_voting_power_value"><%= "Expecting at least #{round(100 * (@node.calculation_opts.minimum_turnout || 0))}% turnout." %></output>
		</div>

		<div class="range" style="margin-bottom: 20px;">
			<input type="range" name="vote_weight_halving_days" id="vote_weight_halving_days_range" value="<%= @node.calculation_opts.vote_weight_halving_days || 1000 %>" min="1" max="1000" step="1" oninput="vote_weight_halving_days_value.value = Math.round(vote_weight_halving_days_range.value) == 1000 ? 'Votes don\'t lose power with time.' : 'Votes will lose half remaining power every ' + Math.round(vote_weight_halving_days_range.value) + ' days.'" style="margin: 0 auto;" />
			<output id="vote_weight_halving_days_value">
				<%= if @node.calculation_opts.vote_weight_halving_days do "Votes will lose half remaining power every #{round(@node.calculation_opts.vote_weight_halving_days)} #{ngettext("day", "days", round(@node.calculation_opts.vote_weight_halving_days))}." else "Votes don't lose power with time." end %>
			</output>
		</div>

		<div class="range" style="margin: 20px 0px;">
			<input type="range" name="reference_minimum_turnout" id="reference_minimum_turnout_range" value="<%= @node.calculation_opts.reference_minimum_turnout %>" min="0" max="1" step="any" oninput="reference_minimum_turnout_value.value = 'Expecting at least ' + Math.round(100 * reference_minimum_turnout_range.value) + '% turnout.'" style="margin: 0 auto;">
			<output id="reference_minimum_turnout_value"><%= "Expecting at least #{round(100 * @node.calculation_opts.reference_minimum_turnout)}% turnout." %></output>
		</div>

		<div class="range" style="margin: 20px 0px;">
			<input type="range" name="reference_minimum_agree" id="minimum_score_range" value="<%= @node.calculation_opts.reference_minimum_agree %>" min="0" max="1" step="any" oninput="minimum_score_value.value = 'At least ' + Math.round(100 * minimum_score_range.value) + '% votes must be positive.'" style="margin: 0 auto;">
			<output id="minimum_score_value"><%= "At least #{round(100 * @node.calculation_opts.reference_minimum_agree)}% votes must be positive." %></output>
		</div>
	</form>

	<div class="buttons">
		<paper-button dialog-dismiss>Close</paper-button>
		<paper-button dialog-confirm raised class="primary" onclick="preferences_form.submit()">Change</paper-button>
	</div>
</paper-dialog>
