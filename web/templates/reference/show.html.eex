<script>
	<%= if @for_choice_node != nil do %>
		<% data = render(Liquio.NodeView, "node.json", %{node: @for_choice_node |> Map.put(:default_results_key, "for_choice")}) %>
		defaultVueData.forChoiceNode = <%= raw(Poison.Encoder.encode(data, [])) %>;
	<% end %>

	<% data = render(Liquio.NodeView, "node.json", %{node: @relevance_node |> Map.put(:default_results_key, "relevance")}) %>
	defaultVueData.relevanceNode = <%= raw(Poison.Encoder.encode(data, [])) %>;

	defaultVueData.nodes = {};

	<%= for node <- @nodes ++ @reference_nodes do %>
		<% data = render(Liquio.NodeView, "node.json", %{node: node}) %>
		defaultVueData.nodes['<%= node.key %>'] = <%= raw(Poison.Encoder.encode(data, [])) %>;
	<% end %>

	defaultVueData.optionsOpen = false;
</script>

<div class="main pure-g">
	<div class="pure-u-2-5">
		<%= for node <- @nodes do %>
			<liquio-node v-bind:node="nodes['<%= node.key %>']" votable="false" link="true"></liquio-node>
		<% end %>
	</div>
	<div class="pure-u-1-5">
		<img src="/images/arrow.svg" class="reference-arrow"></img>
	</div>
	<div class="pure-u-2-5">
		<%= for node <- @reference_nodes do %>
			<liquio-node v-bind:node="nodes['<%= node.key %>']" votable="false" link="true"></liquio-node>
		<% end %>
	</div>

	<div class="pure-u-1">
		<%= if @for_choice_node != nil do %>
			<liquio-node v-bind:node="forChoiceNode" results-key="for_choice"></liquio-node>
		<% end %>
		
		<liquio-node v-bind:node="relevanceNode" results-key="relevance"></liquio-node>
	</div>
</div>

<a @click="optionsOpen = true">Options</a>
<calculation-opts v-bind:opts="nodes['<%= Enum.at(@nodes, 0).key %>'].calculation_opts" v-if="optionsOpen" @close="optionsOpen = false"></calculation-opts>
